// Code generated by protoc-gen-go.
// source: message.proto
// DO NOT EDIT!

package message

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type CMD int32

const (
	CMD_X CMD = 1
	CMD_Y CMD = 2
)

var CMD_name = map[int32]string{
	1: "X",
	2: "Y",
}
var CMD_value = map[string]int32{
	"X": 1,
	"Y": 2,
}

func (x CMD) Enum() *CMD {
	p := new(CMD)
	*p = x
	return p
}
func (x CMD) String() string {
	return proto.EnumName(CMD_name, int32(x))
}
func (x CMD) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *CMD) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMD_value, data, "CMD")
	if err != nil {
		return err
	}
	*x = CMD(value)
	return nil
}

type CIBLE int32

const (
	CIBLE_USERS    CIBLE = 1
	CIBLE_COLUMNS  CIBLE = 2
	CIBLE_PROJECTS CIBLE = 3
	CIBLE_CARDS    CIBLE = 4
	CIBLE_ADMIN    CIBLE = 5
)

var CIBLE_name = map[int32]string{
	1: "USERS",
	2: "COLUMNS",
	3: "PROJECTS",
	4: "CARDS",
	5: "ADMIN",
}
var CIBLE_value = map[string]int32{
	"USERS":    1,
	"COLUMNS":  2,
	"PROJECTS": 3,
	"CARDS":    4,
	"ADMIN":    5,
}

func (x CIBLE) Enum() *CIBLE {
	p := new(CIBLE)
	*p = x
	return p
}
func (x CIBLE) String() string {
	return proto.EnumName(CIBLE_name, int32(x))
}
func (x CIBLE) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *CIBLE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CIBLE_value, data, "CIBLE")
	if err != nil {
		return err
	}
	*x = CIBLE(value)
	return nil
}

type Msg struct {
	Cible            *CIBLE        `protobuf:"varint,1,req,name=cible,enum=message.CIBLE" json:"cible,omitempty"`
	Target           *uint32       `protobuf:"varint,2,req,name=target" json:"target,omitempty"`
	Users            *Msg_Users    `protobuf:"bytes,3,opt,name=users" json:"users,omitempty"`
	Columns          *Msg_Columns  `protobuf:"bytes,4,opt,name=columns" json:"columns,omitempty"`
	Projects         *Msg_Projects `protobuf:"bytes,5,opt,name=projects" json:"projects,omitempty"`
	Cards            *Msg_Cards    `protobuf:"bytes,6,opt,name=cards" json:"cards,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (this *Msg) Reset()         { *this = Msg{} }
func (this *Msg) String() string { return proto.CompactTextString(this) }
func (*Msg) ProtoMessage()       {}

func (this *Msg) GetCible() CIBLE {
	if this != nil && this.Cible != nil {
		return *this.Cible
	}
	return 0
}

func (this *Msg) GetTarget() uint32 {
	if this != nil && this.Target != nil {
		return *this.Target
	}
	return 0
}

func (this *Msg) GetUsers() *Msg_Users {
	if this != nil {
		return this.Users
	}
	return nil
}

func (this *Msg) GetColumns() *Msg_Columns {
	if this != nil {
		return this.Columns
	}
	return nil
}

func (this *Msg) GetProjects() *Msg_Projects {
	if this != nil {
		return this.Projects
	}
	return nil
}

func (this *Msg) GetCards() *Msg_Cards {
	if this != nil {
		return this.Cards
	}
	return nil
}

type Msg_Users struct {
	Id               *uint32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Name             *string `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	Password         *string `protobuf:"bytes,3,req,name=password" json:"password,omitempty"`
	Admin            *bool   `protobuf:"varint,4,req,name=admin" json:"admin,omitempty"`
	Mail             *string `protobuf:"bytes,5,opt,name=mail" json:"mail,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (this *Msg_Users) Reset()         { *this = Msg_Users{} }
func (this *Msg_Users) String() string { return proto.CompactTextString(this) }
func (*Msg_Users) ProtoMessage()       {}

func (this *Msg_Users) GetId() uint32 {
	if this != nil && this.Id != nil {
		return *this.Id
	}
	return 0
}

func (this *Msg_Users) GetName() string {
	if this != nil && this.Name != nil {
		return *this.Name
	}
	return ""
}

func (this *Msg_Users) GetPassword() string {
	if this != nil && this.Password != nil {
		return *this.Password
	}
	return ""
}

func (this *Msg_Users) GetAdmin() bool {
	if this != nil && this.Admin != nil {
		return *this.Admin
	}
	return false
}

func (this *Msg_Users) GetMail() string {
	if this != nil && this.Mail != nil {
		return *this.Mail
	}
	return ""
}

type Msg_Columns struct {
	ProjectId        *uint32 `protobuf:"varint,1,req,name=project_id" json:"project_id,omitempty"`
	Id               *uint32 `protobuf:"varint,2,req,name=id" json:"id,omitempty"`
	Name             *string `protobuf:"bytes,3,req,name=name" json:"name,omitempty"`
	Desc             *string `protobuf:"bytes,4,opt,name=desc" json:"desc,omitempty"`
	Tags             *string `protobuf:"bytes,5,opt,name=tags" json:"tags,omitempty"`
	ScriptsIds       *string `protobuf:"bytes,6,opt,name=scripts_ids" json:"scripts_ids,omitempty"`
	Write            *string `protobuf:"bytes,7,opt,name=write" json:"write,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (this *Msg_Columns) Reset()         { *this = Msg_Columns{} }
func (this *Msg_Columns) String() string { return proto.CompactTextString(this) }
func (*Msg_Columns) ProtoMessage()       {}

func (this *Msg_Columns) GetProjectId() uint32 {
	if this != nil && this.ProjectId != nil {
		return *this.ProjectId
	}
	return 0
}

func (this *Msg_Columns) GetId() uint32 {
	if this != nil && this.Id != nil {
		return *this.Id
	}
	return 0
}

func (this *Msg_Columns) GetName() string {
	if this != nil && this.Name != nil {
		return *this.Name
	}
	return ""
}

func (this *Msg_Columns) GetDesc() string {
	if this != nil && this.Desc != nil {
		return *this.Desc
	}
	return ""
}

func (this *Msg_Columns) GetTags() string {
	if this != nil && this.Tags != nil {
		return *this.Tags
	}
	return ""
}

func (this *Msg_Columns) GetScriptsIds() string {
	if this != nil && this.ScriptsIds != nil {
		return *this.ScriptsIds
	}
	return ""
}

func (this *Msg_Columns) GetWrite() string {
	if this != nil && this.Write != nil {
		return *this.Write
	}
	return ""
}

type Msg_Projects struct {
	Id               *uint32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Name             *string `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	AdminsId         *string `protobuf:"bytes,3,opt,name=admins_id" json:"admins_id,omitempty"`
	Read             *string `protobuf:"bytes,4,opt,name=read" json:"read,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (this *Msg_Projects) Reset()         { *this = Msg_Projects{} }
func (this *Msg_Projects) String() string { return proto.CompactTextString(this) }
func (*Msg_Projects) ProtoMessage()       {}

func (this *Msg_Projects) GetId() uint32 {
	if this != nil && this.Id != nil {
		return *this.Id
	}
	return 0
}

func (this *Msg_Projects) GetName() string {
	if this != nil && this.Name != nil {
		return *this.Name
	}
	return ""
}

func (this *Msg_Projects) GetAdminsId() string {
	if this != nil && this.AdminsId != nil {
		return *this.AdminsId
	}
	return ""
}

func (this *Msg_Projects) GetRead() string {
	if this != nil && this.Read != nil {
		return *this.Read
	}
	return ""
}

type Msg_Cards struct {
	Id               *uint32              `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	ProjectId        *uint32              `protobuf:"varint,2,req,name=project_id" json:"project_id,omitempty"`
	ColumnId         *uint32              `protobuf:"varint,3,req,name=column_id" json:"column_id,omitempty"`
	Name             *string              `protobuf:"bytes,4,req,name=name" json:"name,omitempty"`
	Comments         []*Msg_Cards_Comment `protobuf:"bytes,5,rep,name=comments" json:"comments,omitempty"`
	Desc             *string              `protobuf:"bytes,6,opt,name=desc" json:"desc,omitempty"`
	Tags             *string              `protobuf:"bytes,7,opt,name=tags" json:"tags,omitempty"`
	UsersId          *string              `protobuf:"bytes,8,opt,name=users_id" json:"users_id,omitempty"`
	ScriptsIds       *string              `protobuf:"bytes,9,opt,name=scripts_ids" json:"scripts_ids,omitempty"`
	Write            *string              `protobuf:"bytes,10,opt,name=write" json:"write,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (this *Msg_Cards) Reset()         { *this = Msg_Cards{} }
func (this *Msg_Cards) String() string { return proto.CompactTextString(this) }
func (*Msg_Cards) ProtoMessage()       {}

func (this *Msg_Cards) GetId() uint32 {
	if this != nil && this.Id != nil {
		return *this.Id
	}
	return 0
}

func (this *Msg_Cards) GetProjectId() uint32 {
	if this != nil && this.ProjectId != nil {
		return *this.ProjectId
	}
	return 0
}

func (this *Msg_Cards) GetColumnId() uint32 {
	if this != nil && this.ColumnId != nil {
		return *this.ColumnId
	}
	return 0
}

func (this *Msg_Cards) GetName() string {
	if this != nil && this.Name != nil {
		return *this.Name
	}
	return ""
}

func (this *Msg_Cards) GetDesc() string {
	if this != nil && this.Desc != nil {
		return *this.Desc
	}
	return ""
}

func (this *Msg_Cards) GetTags() string {
	if this != nil && this.Tags != nil {
		return *this.Tags
	}
	return ""
}

func (this *Msg_Cards) GetUsersId() string {
	if this != nil && this.UsersId != nil {
		return *this.UsersId
	}
	return ""
}

func (this *Msg_Cards) GetScriptsIds() string {
	if this != nil && this.ScriptsIds != nil {
		return *this.ScriptsIds
	}
	return ""
}

func (this *Msg_Cards) GetWrite() string {
	if this != nil && this.Write != nil {
		return *this.Write
	}
	return ""
}

type Msg_Cards_Comment struct {
	Id               *uint32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Content          *string `protobuf:"bytes,2,req,name=content" json:"content,omitempty"`
	AuthorId         *string `protobuf:"bytes,3,req,name=author_id" json:"author_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (this *Msg_Cards_Comment) Reset()         { *this = Msg_Cards_Comment{} }
func (this *Msg_Cards_Comment) String() string { return proto.CompactTextString(this) }
func (*Msg_Cards_Comment) ProtoMessage()       {}

func (this *Msg_Cards_Comment) GetId() uint32 {
	if this != nil && this.Id != nil {
		return *this.Id
	}
	return 0
}

func (this *Msg_Cards_Comment) GetContent() string {
	if this != nil && this.Content != nil {
		return *this.Content
	}
	return ""
}

func (this *Msg_Cards_Comment) GetAuthorId() string {
	if this != nil && this.AuthorId != nil {
		return *this.AuthorId
	}
	return ""
}

func init() {
	proto.RegisterEnum("message.CMD", CMD_name, CMD_value)
	proto.RegisterEnum("message.CIBLE", CIBLE_name, CIBLE_value)
}
